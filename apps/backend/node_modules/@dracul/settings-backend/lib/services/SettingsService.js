"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateSettingsByKey = exports.updateSettings = exports.paginateSettings = exports.initializeSettings = exports.initializeSetting = exports.getSettingsValueByKey = exports.findSettingsByKeys = exports.findSettingsByKey = exports.findSettings = exports.fetchSettings = exports.deleteSettings = exports.createSettings = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _SettingsModel = _interopRequireDefault(require("../models/SettingsModel"));

var _apolloServerExpress = require("apollo-server-express");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var initializeSettings = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var settings,
        settingsDoc,
        _iterator,
        _step,
        setting,
        settingDoc,
        _args = arguments;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            settings = _args.length > 0 && _args[0] !== undefined ? _args[0] : [];

            if (Array.isArray(settings)) {
              _context.next = 3;
              break;
            }

            throw new Error('Settings must be an Array');

          case 3:
            settingsDoc = [];
            _iterator = _createForOfIteratorHelper(settings);
            _context.prev = 5;

            _iterator.s();

          case 7:
            if ((_step = _iterator.n()).done) {
              _context.next = 15;
              break;
            }

            setting = _step.value;
            _context.next = 11;
            return initializeSetting(setting);

          case 11:
            settingDoc = _context.sent;
            settingsDoc.push(settingDoc);

          case 13:
            _context.next = 7;
            break;

          case 15:
            _context.next = 20;
            break;

          case 17:
            _context.prev = 17;
            _context.t0 = _context["catch"](5);

            _iterator.e(_context.t0);

          case 20:
            _context.prev = 20;

            _iterator.f();

            return _context.finish(20);

          case 23:
            return _context.abrupt("return", settingsDoc);

          case 24:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[5, 17, 20, 23]]);
  }));

  return function initializeSettings() {
    return _ref.apply(this, arguments);
  };
}();

exports.initializeSettings = initializeSettings;

var initializeSetting = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(setting) {
    var settingDoc;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (setting instanceof Object) {
              _context2.next = 2;
              break;
            }

            throw new Error('Setting must be an Object');

          case 2:
            if (setting.key) {
              _context2.next = 4;
              break;
            }

            throw new Error('Setting must have a key');

          case 4:
            if (setting.label) {
              _context2.next = 6;
              break;
            }

            throw new Error('Setting must have a label');

          case 6:
            _context2.next = 8;
            return findSettingsByKey(setting.key);

          case 8:
            settingDoc = _context2.sent;

            if (settingDoc) {
              _context2.next = 13;
              break;
            }

            _context2.next = 12;
            return createSettings(null, setting);

          case 12:
            settingDoc = _context2.sent;

          case 13:
            return _context2.abrupt("return", settingDoc);

          case 14:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function initializeSetting(_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports.initializeSetting = initializeSetting;

var findSettings = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(id) {
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", new Promise(function (resolve, reject) {
              _SettingsModel["default"].findOne({
                _id: id
              }).exec(function (err, res) {
                return err ? reject(err) : resolve(res);
              });
            }));

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function findSettings(_x2) {
    return _ref3.apply(this, arguments);
  };
}();

exports.findSettings = findSettings;

var findSettingsByKey = /*#__PURE__*/function () {
  var _ref4 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(key) {
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            return _context4.abrupt("return", new Promise(function (resolve, reject) {
              _SettingsModel["default"].findOne({
                key: key
              }).exec(function (err, res) {
                return err ? reject(err) : resolve(res);
              });
            }));

          case 1:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function findSettingsByKey(_x3) {
    return _ref4.apply(this, arguments);
  };
}();

exports.findSettingsByKey = findSettingsByKey;

var getSettingsValueByKey = /*#__PURE__*/function () {
  var _ref5 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(key) {
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            return _context5.abrupt("return", new Promise(function (resolve, reject) {
              _SettingsModel["default"].findOne({
                key: key
              }).exec(function (err, doc) {
                return err ? reject(err) : resolve(doc ? doc.value : null);
              });
            }));

          case 1:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));

  return function getSettingsValueByKey(_x4) {
    return _ref5.apply(this, arguments);
  };
}();

exports.getSettingsValueByKey = getSettingsValueByKey;

var findSettingsByKeys = /*#__PURE__*/function () {
  var _ref6 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6() {
    var keys,
        _args6 = arguments;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            keys = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : [];
            return _context6.abrupt("return", new Promise(function (resolve, reject) {
              _SettingsModel["default"].find({
                key: {
                  $in: keys
                }
              }).exec(function (err, docs) {
                if (err) return reject(err);
                var settings = {};
                docs.forEach(function (doc) {
                  settings[doc.key] = doc;
                });
                resolve(settings);
              });
            }));

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));

  return function findSettingsByKeys() {
    return _ref6.apply(this, arguments);
  };
}();

exports.findSettingsByKeys = findSettingsByKeys;

var fetchSettings = /*#__PURE__*/function () {
  var _ref7 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7() {
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            return _context7.abrupt("return", new Promise(function (resolve, reject) {
              _SettingsModel["default"].find({}).exec(function (err, res) {
                return err ? reject(err) : resolve(res);
              });
            }));

          case 1:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));

  return function fetchSettings() {
    return _ref7.apply(this, arguments);
  };
}();

exports.fetchSettings = fetchSettings;

var paginateSettings = function paginateSettings() {
  var pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;
  var search = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var orderBy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var orderDesc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  function qs(search) {
    var qs = {};

    if (search) {
      qs = {
        $or: [{
          key: {
            $regex: search,
            $options: 'i'
          }
        }, {
          value: {
            $regex: search,
            $options: 'i'
          }
        }]
      };
    }

    return qs;
  }

  function getSort(orderBy, orderDesc) {
    if (orderBy) {
      return (orderDesc ? '-' : '') + orderBy;
    } else {
      return null;
    }
  }

  var query = qs(search);
  var populate = null;
  var sort = getSort(orderBy, orderDesc);
  var params = {
    page: pageNumber,
    limit: itemsPerPage,
    populate: populate,
    sort: sort
  };
  return new Promise(function (resolve, reject) {
    _SettingsModel["default"].paginate(query, params).then(function (result) {
      resolve({
        items: result.docs,
        totalItems: result.totalDocs,
        page: result.page
      });
    })["catch"](function (err) {
      return reject(err);
    });
  });
};

exports.paginateSettings = paginateSettings;

var createSettings = /*#__PURE__*/function () {
  var _ref9 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(authUser, _ref8) {
    var key, value, label, type, options, doc;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            key = _ref8.key, value = _ref8.value, label = _ref8.label, type = _ref8.type, options = _ref8.options;
            doc = new _SettingsModel["default"]({
              key: key,
              value: value,
              label: label,
              type: type,
              options: options
            });
            doc.id = doc._id;
            return _context8.abrupt("return", new Promise(function (resolve, rejects) {
              doc.save(function (error) {
                if (error) {
                  if (error.name == "ValidationError") {
                    return rejects(new _apolloServerExpress.UserInputError(error.message, {
                      inputErrors: error.errors
                    }));
                  }

                  return rejects(error);
                }

                resolve(doc);
              });
            }));

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));

  return function createSettings(_x5, _x6) {
    return _ref9.apply(this, arguments);
  };
}();

exports.createSettings = createSettings;

var updateSettings = /*#__PURE__*/function () {
  var _ref11 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(authUser, id, _ref10) {
    var key, value, label, type, options;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            key = _ref10.key, value = _ref10.value, label = _ref10.label, type = _ref10.type, options = _ref10.options;
            return _context9.abrupt("return", new Promise(function (resolve, rejects) {
              _SettingsModel["default"].findOneAndUpdate({
                _id: id
              }, _objectSpread(_objectSpread({
                key: key,
                value: value,
                label: label
              }, type ? {
                type: type
              } : {}), options ? {
                options: options
              } : {}), {
                "new": true,
                runValidators: true,
                context: 'query'
              }, function (error, doc) {
                if (error) {
                  if (error.name == "ValidationError") {
                    return rejects(new _apolloServerExpress.UserInputError(error.message, {
                      inputErrors: error.errors
                    }));
                  }

                  return rejects(error);
                }

                resolve(doc);
              });
            }));

          case 2:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));

  return function updateSettings(_x7, _x8, _x9) {
    return _ref11.apply(this, arguments);
  };
}();

exports.updateSettings = updateSettings;

var updateSettingsByKey = /*#__PURE__*/function () {
  var _ref13 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(authUser, _ref12) {
    var key, value, label, type, options;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            key = _ref12.key, value = _ref12.value, label = _ref12.label, type = _ref12.type, options = _ref12.options;
            return _context10.abrupt("return", new Promise(function (resolve, rejects) {
              _SettingsModel["default"].findOneAndUpdate({
                key: key
              }, _objectSpread(_objectSpread({
                value: value,
                label: label
              }, type ? {
                type: type
              } : {}), options ? {
                options: options
              } : {}), {
                "new": true,
                runValidators: true,
                context: 'query'
              }, function (error, doc) {
                if (error) {
                  if (error.name == "ValidationError") {
                    return rejects(new _apolloServerExpress.UserInputError(error.message, {
                      inputErrors: error.errors
                    }));
                  }

                  return rejects(error);
                }

                resolve(doc);
              });
            }));

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));

  return function updateSettingsByKey(_x10, _x11) {
    return _ref13.apply(this, arguments);
  };
}();

exports.updateSettingsByKey = updateSettingsByKey;

var deleteSettings = function deleteSettings(id) {
  return new Promise(function (resolve, rejects) {
    findSettings(id).then(function (doc) {
      doc["delete"](function (err) {
        err ? rejects(err) : resolve({
          id: id,
          success: true
        });
      });
    });
  });
};

exports.deleteSettings = deleteSettings;